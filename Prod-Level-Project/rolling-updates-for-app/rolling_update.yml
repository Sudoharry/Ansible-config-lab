---
- name: Rolling update of web application
  hosts: webservers
  become: yes
  serial: 1  # Update one node at a time

  tasks:
    - name: Stop application service
      service:
        name: nginx
        state: stopped

    - name: Remove the existing directory
      file:
        path: /var/www/html/app
        state: absent

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Start Nginx
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Check if nginx is installed
      command: nginx -v
      register: nginx_installed
      ignore_errors: true

    - name: Install nginx if not installed
      apt:
        name: nginx
        state: present
      when: nginx_installed.failed

    - name: Install Python and pip
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - python3
        - python3-pip

    - name: Install virtualenv package
      apt:
        name: python3-venv
        state: present

    - name: Create virtual environment
      command:
        cmd: python3 -m venv /home/ubuntu/venv
        creates: /home/ubuntu/venv

    - name: Ensure the repository is up-to-date
      git:
        repo: https://github.com/Sudoharry/Ansible-config-lab
        dest: /var/www/html/app
        update: yes

    - name: Update application code
      git:
        repo: https://github.com/Sudoharry/Ansible-config-lab
        dest: /var/www/html/app
        version: main

    - name: Install Python requirements forcibly
      command:
        cmd: /home/ubuntu/venv/bin/pip install -r /var/www/html/app/Prod-Level-Project/Application-Deployment-Automation/requirements.txt
        creates: /var/www/html/app/requirements-installed

    - name: Start application service
      service:
        name: nginx
        state: started

- name: Wait for application to be healthy on all web servers
  hosts: webservers
  tasks:
        - name: Wait for application to be healthy
          wait_for:
            host: "{{ inventory_hostname }}"
            port: 8080
            state: started
            timeout: 10
            delay: 10
          register: result

        - name: Check if application is healthy
          debug:
            var: result
